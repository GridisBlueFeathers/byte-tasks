/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/styles/style.css":
/*!******************************!*\
  !*** ./src/styles/style.css ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://final-project/./src/styles/style.css?");

/***/ }),

/***/ "./src/components/API.js":
/*!*******************************!*\
  !*** ./src/components/API.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"API\": () => (/* binding */ API)\n/* harmony export */ });\nclass API {\r\n    constructor() {\r\n        this.BASE_URL = \"https://byte-tasks.herokuapp.com/api\";\r\n    }\r\n\r\n    async findErrors(response) {\r\n        if(!response.ok) {\r\n            const { details } = await response.json();\r\n\r\n            throw new Error(\"Error\", { cause: details });\r\n        }\r\n\r\n        return response;\r\n    }\r\n\r\n    async sendRequest(url, options) {\r\n        const response = await this.findErrors(await fetch(url, options));\r\n\r\n        if (response.status === 204) {\r\n            return;\r\n        }\r\n\r\n        const result = await response.json();\r\n        return result;\r\n    }\r\n\r\n    async loginRequest(body) {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: body,\r\n        };\r\n        \r\n        const login = await this.sendRequest(`${this.BASE_URL}/auth/login`, options);\r\n\r\n        return login;\r\n    }\r\n\r\n    async registerRequest(body) {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: body,\r\n        };\r\n        \r\n        const register = await this.sendRequest(`${this.BASE_URL}/auth/register`, options);\r\n\r\n        return register;\r\n    }\r\n\r\n    async selfRequest(token) {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            },\r\n          };\r\n          \r\n        const self = await this.sendRequest(`${this.BASE_URL}/auth/user/self`, options);\r\n\r\n        return self;\r\n    }\r\n\r\n    async taskGetRequest(token) {\r\n        const options = {\r\n            method: 'GET',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n          };\r\n          \r\n        const tasks = await this.sendRequest(`${this.BASE_URL}/task`, options);\r\n\r\n        return tasks;\r\n    }\r\n\r\n    async taskPostRequest({ token, body }) {\r\n        const options = {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: body,\r\n        };\r\n          \r\n        const task = await this.sendRequest(`${this.BASE_URL}/task`, options);\r\n\r\n        return task;\r\n    }\r\n\r\n    async taskIdDeleteRequest({ token, taskId }) {\r\n        const options = {\r\n            method: 'DELETE',\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n              'Content-Type': 'application/json',\r\n            }\r\n        };\r\n        \r\n        await this.sendRequest(`${this.BASE_URL}/task/${taskId}`, options);\r\n    }\r\n\r\n    async taskFinishedRequest({ token, taskId, body }) {\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: body,\r\n        };\r\n          \r\n        const task = await this.sendRequest(`${this.BASE_URL}/task/${taskId}`, options);\r\n\r\n        return task;\r\n    }\r\n\r\n    async taskCountRequest({ token, taskId, body }) {\r\n        const options = {\r\n            method: 'PATCH',\r\n            headers: {\r\n                Authorization: `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: body,\r\n        };\r\n          \r\n        const task = await this.sendRequest(`${this.BASE_URL}/task/${taskId}`, options);\r\n\r\n        return task;\r\n\r\n    }\r\n\r\n    placeholderRequest() {\r\n        return \"placeholder\";\r\n    }\r\n}\n\n//# sourceURL=webpack://final-project/./src/components/API.js?");

/***/ }),

/***/ "./src/components/Form.js":
/*!********************************!*\
  !*** ./src/components/Form.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Form\": () => (/* binding */ Form)\n/* harmony export */ });\n/* harmony import */ var _Input__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Input */ \"./src/components/Input.js\");\n\r\n\r\nclass Form {\r\n    constructor({ name, buttonText, APIEndpointFunction, inputTitlesArr }) {\r\n        this.name = name;\r\n        this.buttonText = buttonText;\r\n        this.inputTitlesArr = inputTitlesArr;\r\n        this.APIEndpointFunction = APIEndpointFunction;\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n        \r\n        const formInputsObj = {};\r\n\r\n        this.inputTitlesArr.forEach(inputTitle => {\r\n            const inputElement = document.getElementById(inputTitle);\r\n            const inputValue = inputElement.value;\r\n            formInputsObj[inputTitle] = inputValue;\r\n\r\n            const inputSpanElement = inputElement.nextElementSibling;\r\n            inputSpanElement.innerText = \"\";\r\n        });\r\n        \r\n        const body = JSON.stringify(formInputsObj);\r\n        this.APIEndpointFunction(body);\r\n    }\r\n\r\n    createFormElement() {\r\n        const formElement = document.createElement(\"form\");\r\n        const formTitleElement = document.createElement(\"h3\");\r\n        const formButton = document.createElement(\"button\");\r\n\r\n        formTitleElement.innerText = this.name;\r\n        formElement.append(formTitleElement);\r\n\r\n\r\n        this.inputTitlesArr.forEach(inputTitle => {\r\n            const input = new _Input__WEBPACK_IMPORTED_MODULE_0__.Input(inputTitle);\r\n\r\n            const inputContainer = input.createInputElement();\r\n            \r\n            formElement.append(inputContainer);\r\n        });\r\n\r\n        formButton.innerText = this.buttonText;\r\n        formElement.append(formButton);\r\n        \r\n        formElement.addEventListener(\"submit\", this.handleSubmit);\r\n\r\n        return formElement;\r\n\r\n    }\r\n}\n\n//# sourceURL=webpack://final-project/./src/components/Form.js?");

/***/ }),

/***/ "./src/components/Input.js":
/*!*********************************!*\
  !*** ./src/components/Input.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Input\": () => (/* binding */ Input)\n/* harmony export */ });\nclass Input {\r\n    constructor(name) {\r\n        this.name = name;\r\n    }\r\n\r\n    createInputElement() {\r\n        const inputContainer = document.createElement(\"div\");\r\n        const inputLabel = document.createElement(\"label\");\r\n        const inputInput = document.createElement(\"input\");\r\n        const inputError = document.createElement(\"span\");\r\n\r\n        inputInput.setAttribute(\"id\", this.name);\r\n        if(this.name === \"password\") {\r\n            inputInput.setAttribute(\"type\", \"password\");\r\n        }\r\n\r\n        inputLabel.setAttribute(\"for\", this.name);\r\n\r\n        inputLabel.innerText = this.name;\r\n        \r\n        inputContainer.append(inputLabel, inputInput, inputError);\r\n\r\n        return inputContainer;\r\n    }\r\n}\n\n//# sourceURL=webpack://final-project/./src/components/Input.js?");

/***/ }),

/***/ "./src/components/Task.js":
/*!********************************!*\
  !*** ./src/components/Task.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Task\": () => (/* binding */ Task)\n/* harmony export */ });\n/* harmony import */ var _API__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./API */ \"./src/components/API.js\");\n\r\n\r\nclass Task {\r\n    constructor({ name, description, _id, createdAt, isActive, isFinished, timeTracked }) {\r\n        this.name = name;\r\n        this.description = description;\r\n        this.id = _id;\r\n        this.createdAt = createdAt;\r\n        this.isActive = isActive;\r\n        this.isFinished = isFinished;\r\n        this.timeTracked = timeTracked;\r\n        this.element = document.createElement(\"div\");\r\n        this.timeTrackedId = null;\r\n\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleFinished = this.handleFinished.bind(this);\r\n        this.handleTrackTime = this.handleTrackTime.bind(this);\r\n        this.timerCounting = this.timerCounting.bind(this);\r\n    }\r\n\r\n    formatDateForCreatedAt(miliseconds) {\r\n        const flooredSeconds = Math.floor(miliseconds / 1000);\r\n\r\n        const hours = !Math.floor(flooredSeconds / 3600) ? \"00\" : Math.floor(flooredSeconds / 3600);\r\n\r\n        const minutes = !Math.floor((flooredSeconds - (Number(hours) * 3600)) / 60) ? \"00\" : Math.floor((flooredSeconds - (Number(hours) * 3600)) / 60);\r\n\r\n        const seconds = !Math.floor(flooredSeconds - (hours * 3600) - (minutes * 60)) ? \"00\" : Math.floor(flooredSeconds - (hours * 3600) - (minutes * 60));\r\n\r\n        const units = [hours, minutes, seconds];\r\n        const formattedUnits = units.map(unit => String(unit).length < 2 ? `0${unit}` : unit);\r\n\r\n        const res = `${formattedUnits[0]}:${formattedUnits[1]}:${formattedUnits[2]}`\r\n\r\n        return res;\r\n    }\r\n\r\n    async handleDelete() {\r\n        const authToken = localStorage.getItem(\"token\");\r\n\r\n        try {\r\n            await new _API__WEBPACK_IMPORTED_MODULE_0__.API().taskIdDeleteRequest({\r\n                token: authToken,\r\n                taskId: this.id,\r\n            });\r\n\r\n            this.element.remove();\r\n        } catch(error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    async handleFinished() {\r\n        const authToken = localStorage.getItem(\"token\");\r\n        const body = {};\r\n\r\n        switch(this.isFinished) {\r\n            case true:\r\n                body[\"timeTracked\"] = 0;\r\n                body[\"isFinished\"] = false;\r\n                break;\r\n                \r\n            case false:\r\n                body[\"isActive\"] = false;\r\n                body[\"isFinished\"] = true;\r\n                break;\r\n        }\r\n\r\n        const stringifiedBody = JSON.stringify(body);\r\n        \r\n        try {\r\n            const { timeTracked, isFinished, isActive } = await new _API__WEBPACK_IMPORTED_MODULE_0__.API().taskFinishedRequest({\r\n                token: authToken,\r\n                taskId: this.id,\r\n                body: stringifiedBody,\r\n            });\r\n\r\n            switch(isFinished) {\r\n                case true:\r\n                    this.isFinished = isFinished;\r\n                    this.isActive = isActive;\r\n\r\n                    this.element.classList.add(\"task__container-finished\");\r\n                    this.element.querySelector(\".task__button\").classList.add(\"task__button-inactive\");\r\n                    \r\n                    this.element.querySelector(\"button\").innerText = \"Restart\";\r\n\r\n                    break;\r\n\r\n                case false:\r\n                    this.isFinished = isFinished;\r\n                    this.timeTracked = timeTracked;\r\n\r\n                    this.element.classList.remove(\"task__container-finished\");\r\n                    this.element.querySelector(\".task__button\").classList.remove(\"task__button-inactive\");\r\n\r\n                    this.element.querySelector(\"button\").innerText = \"Mark as done\";\r\n                    this.element.querySelector(\".task__count\").innerText = this.formatDateForCreatedAt(this.timeTracked);\r\n\r\n                    break;\r\n            }\r\n\r\n        } catch(error) {\r\n            console.log(error.message);\r\n        }        \r\n    }\r\n\r\n    timerCounting() {\r\n        this.element.querySelector(\".task__count\").innerText = this.formatDateForCreatedAt(this.timeTracked);\r\n\r\n        this.timeTracked += 1000;\r\n\r\n        this.timeTrackedId = setTimeout(() => {\r\n            this.timerCounting();\r\n        }, 1000);\r\n    }\r\n\r\n    async handleTrackTime() {\r\n        if (this.isFinished) {\r\n            return;\r\n        }\r\n\r\n        const authToken = localStorage.getItem(\"token\");        \r\n        const body = JSON.stringify({ isActive: !this.isActive });\r\n\r\n        try {\r\n            await new _API__WEBPACK_IMPORTED_MODULE_0__.API().taskCountRequest({\r\n                token: authToken,\r\n                taskId: this.id,\r\n                body: body,\r\n            })\r\n\r\n            switch(this.isActive) {\r\n                case true:\r\n                    this.isActive = false;\r\n\r\n                    const pasueButton = this.element.querySelector(\".fa-pause\");\r\n                    pasueButton.classList.remove(\"fa-pause\");\r\n                    pasueButton.classList.add(\"fa-play\");\r\n\r\n                    clearTimeout(this.timeTrackedId);\r\n                    break;\r\n                    \r\n                case false:\r\n                    this.isActive = true;\r\n\r\n                    const playButton = this.element.querySelector(\".fa-play\");\r\n                    playButton.classList.remove(\"fa-play\");\r\n                    playButton.classList.add(\"fa-pause\");\r\n\r\n                    this.timerCounting();\r\n                    break;\r\n            }\r\n        } catch(error) {\r\n            console.log(error.message);\r\n        }\r\n    }\r\n\r\n    async renderTaskElement() {\r\n        const taskNameElement = document.createElement(\"h4\");\r\n        const taskDescriptionElement = document.createElement(\"p\");\r\n        const taskTimerContainerElement = document.createElement(\"div\");\r\n        const taskTimerTimeElement = document.createElement(\"span\");\r\n        const taskCreatedAtElement = document.createElement(\"div\");\r\n        const taskActiveElement = document.createElement(\"button\");\r\n\r\n        const taskTimerButtonContainerElement = document.createElement(\"span\");\r\n        const taskTimerButtonIconElement = document.createElement(\"i\");\r\n        const taskTimerButtonCirleElement = document.createElement(\"i\");\r\n\r\n\r\n        const taskDeleteContainerElement = document.createElement(\"span\");\r\n        const taskDeleteXElement = document.createElement(\"span\");\r\n        const taskDeleteCirleElement = document.createElement(\"span\");\r\n\r\n        taskNameElement.innerText = this.name;\r\n\r\n        taskDescriptionElement.innerText = this.description;\r\n\r\n        taskTimerContainerElement.classList.add(\"task__timer\");\r\n        \r\n        taskTimerButtonContainerElement.classList.add(\"fa-stack\", \"task__button\");\r\n        taskTimerButtonIconElement.classList.add(\"fa-solid\", \"fa-play\", \"fa-stack-1x\");\r\n        taskTimerButtonCirleElement.classList.add(\"fa-regular\", \"fa-circle\", \"fa-stack-2x\");\r\n        taskTimerButtonContainerElement.addEventListener(\"click\", this.handleTrackTime);\r\n\r\n        taskTimerTimeElement.innerText = this.formatDateForCreatedAt(this.timeTracked);\r\n        taskTimerTimeElement.classList.add(\"task__count\")\r\n\r\n        taskCreatedAtElement.innerText = new Date(this.createdAt).toLocaleString();\r\n        taskCreatedAtElement.classList.add(\"task__date\");\r\n        \r\n        taskActiveElement.innerText = !this.isFinished ? \"Mark as done\" : \"Restart\";\r\n        taskActiveElement.addEventListener(\"click\", this.handleFinished)\r\n        \r\n        taskDeleteContainerElement.classList.add(\"fa-stack\", \"task__button\", \"task__close\");\r\n        taskDeleteXElement.classList.add(\"fa-solid\", \"fa-xmark\", \"fa-stack-1x\");\r\n        taskDeleteCirleElement.classList.add(\"fa-regular\", \"fa-circle\", \"fa-stack-2x\");\r\n        taskDeleteContainerElement.addEventListener(\"click\", this.handleDelete);\r\n\r\n        taskTimerButtonContainerElement.append(taskTimerButtonIconElement, taskTimerButtonCirleElement);\r\n        taskDeleteContainerElement.append(taskDeleteXElement, taskDeleteCirleElement)\r\n        taskTimerContainerElement.append(taskTimerButtonContainerElement, taskTimerTimeElement);\r\n        await this.element.append(\r\n            taskNameElement, \r\n            taskDescriptionElement, \r\n            taskTimerContainerElement, \r\n            taskCreatedAtElement, \r\n            taskActiveElement,\r\n            taskDeleteContainerElement,\r\n        );\r\n\r\n        this.element.classList.add(\"task__container\");\r\n\r\n        if(this.isFinished) {\r\n            this.element.classList.add(\"task__container-finished\");\r\n            taskTimerButtonContainerElement.classList.add(\"task__button-inactive\");\r\n        }\r\n\r\n        if(this.isActive) {\r\n            taskTimerButtonIconElement.classList.remove(\"fa-play\");\r\n            taskTimerButtonIconElement.classList.add(\"fa-pause\");\r\n            this.timerCounting();\r\n        }\r\n\r\n        document.getElementById(\"tasksContainer\").append(this.element);\r\n\r\n    }\r\n\r\n}\n\n//# sourceURL=webpack://final-project/./src/components/Task.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_API__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/API */ \"./src/components/API.js\");\n/* harmony import */ var _components_Form__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/Form */ \"./src/components/Form.js\");\n/* harmony import */ var _components_Task__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./components/Task */ \"./src/components/Task.js\");\n/* harmony import */ var _styles_style_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./styles/style.css */ \"./src/styles/style.css\");\n\n\n\n\n\n\nconst appElement = document.getElementById(\"app\");\nlet authToken = localStorage.getItem(\"token\");\n\nconst renderErrorCause = (error) => {\n    const details = error.cause;\n    \n    details.forEach(detail => {\n        const deatailPathSpanElement = document.getElementById(detail.path[0]).nextSibling;\n        deatailPathSpanElement.innerText = detail.message;\n    });\n}\n\nconst loginFunction = async (body) => {\n    try {\n        const loginRequest = await new _components_API__WEBPACK_IMPORTED_MODULE_0__.API().loginRequest(body);\n\n        authToken = loginRequest.token;\n        localStorage.setItem(\"token\", authToken);\n\n        document.getElementById(\"loginFormContainer\").remove();\n\n        renderAppPart(authToken);\n    } catch(error) {\n        renderErrorCause(error);\n    }\n}\n\nconst registerFunction = async (body) => {\n    try {\n        await new _components_API__WEBPACK_IMPORTED_MODULE_0__.API().registerRequest(body);\n        \n        const formToggleElement = document.getElementById(\"formToggle\");\n        formToggleElement.dispatchEvent(new Event(\"click\"));\n    } catch(error) {\n        renderErrorCause(error);\n    }\n}\n\nconst taskFunction = async (body) => {\n    try {\n        const taskRequest = await new _components_API__WEBPACK_IMPORTED_MODULE_0__.API().taskPostRequest({\n            token: authToken,\n            body: body,\n        });\n\n        new _components_Task__WEBPACK_IMPORTED_MODULE_2__.Task(taskRequest).renderTaskElement();\n    } catch(error) {\n        renderErrorCause(error);\n    }\n}\n\nconst renderLoginPart = () => {\n    const loginForm = new _components_Form__WEBPACK_IMPORTED_MODULE_1__.Form({\n        name: \"login\",\n        buttonText: \"submit\",\n        APIEndpointFunction: loginFunction,\n        inputTitlesArr: [\"email\", \"password\"],\n    });\n    \n    const registerForm = new _components_Form__WEBPACK_IMPORTED_MODULE_1__.Form({\n        name: \"register\",\n        buttonText: \"submit\",\n        APIEndpointFunction: registerFunction,\n        inputTitlesArr: [\"email\", \"name\", \"password\"],\n    });\n    \n    const loginFormElement = loginForm.createFormElement();\n    const registerFormElement = registerForm.createFormElement();\n    \n    const loginContainer = document.createElement(\"div\");\n\n    const formToggleElement = document.createElement(\"button\");\n    const formToggleClickHandler = () => {\n        switch(formToggleElement.innerText) {\n            case \"REGISTER\":\n                loginFormElement.remove();\n                loginContainer.append(registerFormElement);\n                formToggleElement.innerText = \"Login\";\n                break;\n            \n            case \"LOGIN\":\n                registerFormElement.remove();\n                loginContainer.append(loginFormElement);\n                formToggleElement.innerText = \"Register\";\n                break;\n        }\n    }\n    \n    formToggleElement.setAttribute(\"id\", \"formToggle\");\n    formToggleElement.innerText = \"Register\";\n    formToggleElement.addEventListener(\"click\", formToggleClickHandler)\n    \n    loginContainer.classList.add(\"formContainer\");\n    loginContainer.setAttribute(\"id\", \"loginFormContainer\");\n    loginContainer.append(formToggleElement, loginFormElement);\n\n    appElement.append(loginContainer);\n}\n\nconst requestAppPart = async (authToken) => {\n    const { name } = await new _components_API__WEBPACK_IMPORTED_MODULE_0__.API().selfRequest(authToken);\n    const tasks = await new _components_API__WEBPACK_IMPORTED_MODULE_0__.API().taskGetRequest(authToken);\n    \n    return {\n        username: name,\n        tasksArr: tasks\n    }\n}\n\nconst renderLogout = (username, appContainer) => {\n    const firstLetter = username[0].toUpperCase();\n\n    const logoutElement = document.getElementById(\"logout\");\n    const logoutUserElement = document.getElementById(\"logout__user\");\n    const logoutTextElement = document.getElementById(\"logout__text\");\n\n    logoutElement.style.display = \"flex\";\n    logoutUserElement.innerText = firstLetter;\n\n    logoutTextElement.addEventListener(\"click\", () => {\n        logoutElement.style.display = \"none\";\n        logoutUserElement.innerText = \"\";\n        \n        appContainer.remove();\n        \n        localStorage.removeItem('token');\n        renderLoginPart();\n    })\n\n}\n\nconst renderAppPart = async (authToken) => {\n    const { username, tasksArr } = await requestAppPart(authToken);\n    \n    const appContainer = document.createElement(\"div\");\n    const formContainer = document.createElement(\"div\");\n    const tasksContainer = document.createElement(\"div\");\n    \n    appContainer.classList.add(\"appContainer\");\n    appContainer.setAttribute(\"id\", \"appContainer\");\n    \n    formContainer.classList.add(\"formContainer\");\n    \n    const taskForm = new _components_Form__WEBPACK_IMPORTED_MODULE_1__.Form({\n        name: \"add task\",\n        buttonText: \"add\",\n        APIEndpointFunction: taskFunction,\n        inputTitlesArr: [\"name\", \"description\"],\n    });\n    \n    const taskElement = taskForm.createFormElement();\n    formContainer.append(taskElement);\n    \n    \n    tasksContainer.classList.add(\"tasksContainer\");\n    tasksContainer.setAttribute(\"id\", \"tasksContainer\");\n\n    tasksArr.forEach((taskObj) => {\n        new _components_Task__WEBPACK_IMPORTED_MODULE_2__.Task(taskObj).renderTaskElement();\n    });\n\n    appContainer.append(formContainer, tasksContainer);\n    \n    appElement.append(appContainer)\n    renderLogout(username, appContainer);\n}\n\nswitch(!authToken) {\n    case true:\n        renderLoginPart();\n        break;\n\n    case false:\n        renderAppPart(authToken);\n        break;\n}\n\n\n//# sourceURL=webpack://final-project/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;